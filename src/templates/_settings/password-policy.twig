{% import '_includes/forms' as forms %}

<hr>
<h2>Password Policy</h2>

{{ forms.lightswitchField({
  errors: settings.passwordPolicy.getErrors('enabled'),
  label: 'Enable Password policy',
  name: 'passwordPolicy[enabled]',
  on: settings.passwordPolicy.enabled,
}) }}

{{ forms.textField({
  errors: settings.passwordPolicy.getErrors('minLength'),
  label: 'Minimum length length',
  name: 'passwordPolicy[minLength]',
  type: 'number',
  value: settings.passwordPolicy.minLength,
}) }}

{{ forms.textField({
  errors: settings.passwordPolicy.getErrors('maxLength'),
  label: 'Maximum length',
  name: 'passwordPolicy[maxLength]',
  type: 'number',
  value: settings.passwordPolicy.maxLength,
}) }}

{{ forms.lightswitchField({
  errors: settings.passwordPolicy.getErrors('requireCases'),
  label: 'Require cases',
  name: 'passwordPolicy[requireCases]',
  on: settings.passwordPolicy.requireCases,
}) }}

{{ forms.lightswitchField({
  errors: settings.passwordPolicy.getErrors('requireNumbers'),
  label: 'Require numbers',
  name: 'passwordPolicy[requireNumbers]',
  on: settings.passwordPolicy.requireNumbers,
}) }}

{{ forms.lightswitchField({
  errors: settings.passwordPolicy.getErrors('requireSymbols'),
  label: 'Require symbols',
  name: 'passwordPolicy[requireSymbols]',
  on: settings.passwordPolicy.requireSymbols,
}) }}

{{ forms.lightswitchField({
  errors: settings.passwordPolicy.getErrors('usePwnedValidator'),
  label: 'Use pwned validator',
  name: 'passwordPolicy[usePwnedValidator]',
  on: settings.passwordPolicy.usePwnedValidator,
}) }}
